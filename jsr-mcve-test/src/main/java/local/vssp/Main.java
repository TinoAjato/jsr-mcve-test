package local.vssp;

import java.io.File;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.export.ooxml.JRDocxExporter;
import net.sf.jasperreports.export.SimpleDocxReportConfiguration;
import net.sf.jasperreports.export.SimpleExporterInput;
import net.sf.jasperreports.export.SimpleOutputStreamExporterOutput;

public class Main {
	
	private static String path = "D:";
	
	private static List<TestObject> testObjects = new ArrayList<TestObject>();
	
	
	public static void main(String[] args) throws JRException {
		
		System.out.println("Начало");
		
		createData();
		
		testObjects.forEach(System.out::println);
		
		printReports();
		
		System.out.println("Конец");
	}
	
	
	private static void createData() {
		
		TestObject testObject = new TestObject(1L, "wrg wrwr gwrewr wergw wergw erg we g wgwe gwegwe gwegw egwe gweg wegweg wergwer wr gwg  wr grwgwr rwgwr",
				new BigDecimal(200), new BigDecimal(300), new BigDecimal(400));
		
		Set<PositionShares> positionShares = new HashSet<PositionShares>();
		PositionShares shares = new PositionShares(new BigDecimal(100), "Glav. ", "BK ", new BigDecimal(100), new BigDecimal(500));
		positionShares.add(shares);
		
		testObject.setPositionShares(positionShares);
		
		testObjects.add(testObject);
	}
	
	
	public static void printReports() throws JRException {
		
		JRBeanCollectionDataSource source = new JRBeanCollectionDataSource(testObjects);
		
		Map<String, Object> map = new HashMap<String, Object>();
		
		JasperReport jasperReport = JasperCompileManager.compileReport(path + File.separator + "mcve.jrxml");
		JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, map, source);
		
		
		String filePath = path + File.separator + "RT_1__PDF.pdf";
		
		JasperExportManager.exportReportToPdfFile(jasperPrint, filePath);
		
		
		filePath = path + File.separator + "RT_2_DOCX.docx";
		
		JRDocxExporter docxExporter = new JRDocxExporter();
		docxExporter.setExporterInput(new SimpleExporterInput(jasperPrint));
		docxExporter.setExporterOutput(new SimpleOutputStreamExporterOutput(filePath));
		SimpleDocxReportConfiguration docxReportConfiguration = new SimpleDocxReportConfiguration();
		docxExporter.setConfiguration(docxReportConfiguration);
		docxExporter.exportReport();
		
	}
	
}